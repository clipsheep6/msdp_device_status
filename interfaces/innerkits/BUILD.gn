# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("../../device_status.gni")

config("devicestatus_public_config") {
  include_dirs = [
    "include",
    "${device_status_service_path}/native/include",
    "${device_status_frameworks_path}/js/napi/include",
    "${device_status_frameworks_path}/native/event_handler/include",
    "${device_status_frameworks_path}/native/interaction/include",
    "${device_status_utils_path}/include",
    "${device_status_interfaces_path}/innerkits/include",
    "${device_status_interfaces_path}/innerkits/interaction/include",
    "${device_status_root_path}/utils/ipc/include",
    "${device_status_root_path}/utils/semphore/include",
    "${device_status_root_path}/services/communication/base/",
    "${device_status_root_path}/services/communication/semphore/",
    "${device_status_root_path}/services/communication/client/include",
  ]

  defines = device_status_default_defines
}

ohos_shared_library("devicestatus_client") {
  version_script = "libdevicestatus_client_map"
  sources = [
    "${device_status_frameworks_path}/native/interaction/src/drag_manager_impl.cpp",
    "${device_status_frameworks_path}/native/interaction/src/interaction_manager.cpp",
    "${device_status_frameworks_path}/native/interaction/src/interaction_manager_impl.cpp",
    "${device_status_frameworks_path}/native/src/client.cpp",
    "${device_status_frameworks_path}/native/src/devicestatus_callback_proxy.cpp",
    "${device_status_frameworks_path}/native/src/devicestatus_callback_stub.cpp",
    "${device_status_frameworks_path}/native/src/devicestatus_client.cpp",
    "${device_status_frameworks_path}/native/src/fd_listener.cpp",
    "${device_status_frameworks_path}/native/src/stationary_manager.cpp",
    "${device_status_root_path}/services/communication/client/src/devicestatus_srv_proxy.cpp",
  ]

  if (fusion_interaction_coordination) {
    sources += [ "${device_status_frameworks_path}/native/interaction/src/coordination_manager_impl.cpp" ]
  }

  configs = [ "${device_status_utils_path}:devicestatus_utils_config" ]

  deps = [
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
    "${device_status_root_path}/utils/semphore:devicestatus_semphore",
    "${device_status_utils_path}:devicestatus_util",
  ]

  public_configs = [ ":devicestatus_public_config" ]

  external_deps = [
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_single",
    "multimedia_image_framework:image_native",
    "samgr:samgr_proxy",
  ]

  innerapi_tags = [ "platformsdk" ]
  subsystem_name = "${device_status_subsystem_name}"
  part_name = "${device_status_part_name}"
}
