# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../device_status.gni")

module_output_path = "${device_status_part_name}/device_status/unit_out"

ohos_unittest("StationaryServerTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }
  module_out_path = module_output_path
  include_dirs = [
    "${device_status_root_path}/intention/stationary/data/include",
    "${device_status_root_path}/intention/stationary/server/include",
    "${device_status_root_path}/libs/interface",
    "${device_status_service_path}/communication/service/include",
  ]
  sources = [ "src/stationary_server_test.cpp" ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/prototype:intention_prototype",
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
    "${device_status_utils_path}:devicestatus_util",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "input:libmmi-client",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]

  defines = []
  if (device_status_motion_enable) {
    defines += [ "MOTION_ENABLE" ]
    external_deps += [ "motion:motion_interface_native" ]
  }

  if (device_status_sensor_enable) {
    defines += [ "DEVICE_STATUS_SENSOR_ENABLE" ]
    external_deps += [ "sensor:sensor_interface_native" ]
  }
}

group("unittest") {
  testonly = true
  deps = [ ":StationaryServerTest" ]
}
