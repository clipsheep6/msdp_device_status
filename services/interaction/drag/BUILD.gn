# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/msdp/device_status/device_status.gni")
import("//build/ohos.gni")
import("//build/test.gni")

module_output_path = "${device_status_part_name}/unit_out"

config("drag_private_config") {
  include_dirs = [ "include" ]
}

ohos_shared_library("interaction_drag") {
  include_dirs = [
    "${device_status_interfaces_path}/innerkits/interaction/include",
    "${device_status_utils_path}/include",
    "${device_status_service_path}/context/include",
    "${device_status_service_path}/native/include",
    "//foundation/graphic/graphic_2d/interfaces/inner_api/composer",
    "//foundation/graphic/graphic_2d/rosen/modules/composer/vsync/include",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/include",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client/core",
    "//foundation/window/window_manager/interfaces/innerkits/wm",
  ]

  sources = [
    "src/drag_data_adapter.cpp",
    "src/drag_manager.cpp",
    "src/state_change_notify.cpp",
    "src/drag_drawing.cpp",
  ]

  configs = [ ":drag_private_config" ]

  defines = device_status_default_defines

  deps = [
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
    "${device_status_utils_path}:devicestatus_util",
    "${device_status_root_path}/etc/mouse_icon:device_status_mouse_icon",
    "//foundation/graphic/graphic_2d/rosen/modules/composer/vsync:libvsync",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics:2d_graphics",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client",
    "//third_party/libxml2:xml2",
  ]

  external_deps = [
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "input:libmmi-client",
    "ipc:ipc_core",
    "multimedia_image_framework:image_native",
    "window_manager:libdm",
    "window_manager:libwm",
  ]

  subsystem_name = "msdp"
  part_name = "${device_status_part_name}"
}

ohos_unittest("DragDrawingTest") {
  module_out_path = module_output_path
  include_dirs = [
    "${device_status_interfaces_path}/innerkits/include",
    "//utils/system/safwk/native/include",
    "//base/msdp/device_status/interfaces/innerkits/interaction/include",
    "//base/msdp/device_status/services/interaction/drag/include",
    "../../../communication/service/include",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/include",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client/core",
    "//foundation/window/window_manager/interfaces/innerkits/wm",
  ]

  sources = [ "src/drag_drawing_test.cpp" ]

  configs = [ "${device_status_utils_path}:devicestatus_utils_config" ]

  deps = [
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
    "${device_status_utils_path}:devicestatus_util",
    "//base/msdp/device_status/services/interaction/drag:interaction_drag",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics:2d_graphics",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client",
  ]

  external_deps = [
    "c_utils:utils",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "input:libmmi-client",
    "ipc:ipc_core",
    "multimedia_image_framework:image_native",
    "window_manager:libwm"
  ]
}
