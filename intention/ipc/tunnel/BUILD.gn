# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../device_status.gni")
import("//build/config/components/idl_tool/idl.gni")

config("intention_tunnel_public_config") {
  include_dirs = [
    "include",
    "${target_gen_dir}",
    "${device_status_root_path}/intention/ipc/sequenceable_types/include",
    "${device_status_root_path}/interfaces/innerkits/interaction/include",
    "${device_status_root_path}/interfaces/innerkits/include"
  ]
}

idl_gen_interface("intention_interface") {
  sources = [ "IIntention.idl" ]
  log_domainid = "0xD002220"
  log_tag = "IntentionIdl"
  part_name = "${device_status_part_name}"
  subsystem_name = "msdp"
}

ohos_source_set("intention_client") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  branch_protector_ret = "pac_ret"

  include_dirs = [ "include" ]

  output_values = get_target_outputs(":intention_interface")

  sources = [
    "src/intention_client.cpp",
  ]

  sources += filter_include(output_values, [ "*_proxy.cpp" ])

  public_configs = [ ":intention_tunnel_public_config" ]

  deps = [
    "${device_status_root_path}/intention/prototype:intention_prototype",
    "${device_status_utils_path}:devicestatus_util",
    "${device_status_root_path}/intention/ipc/sequenceable_types:sequenceable_types",
    ":intention_interface"
  ]

  external_deps = [
    "c_utils:utils",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
    "image_framework:image_native"
  ]

  subsystem_name = "${device_status_subsystem_name}"
  part_name = "${device_status_part_name}"
}

ohos_source_set("intention_server_stub") {
  public_configs = [ ":intention_tunnel_public_config" ]
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  output_values = get_target_outputs(":intention_interface")
  sources = filter_include(output_values, [ "*_stub.cpp" ])
  deps = [
    ":intention_interface",
    "${device_status_root_path}/intention/ipc/sequenceable_types:sequenceable_types"
  ]
  external_deps = [
    "c_utils:utils",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
    "image_framework:image_native"
  ]
  part_name = "${device_status_part_name}"
  subsystem_name = "msdp"
}
