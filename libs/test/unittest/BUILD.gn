# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/msdp/device_status/device_status.gni")
import("//build/test.gni")

module_output_path = "${device_status_part_name}/devicestatussrv"

config("devicestatus_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "include",
    "//base/msdp/device_status/services/native/include",
    "//base/msdp/device_status/libs/include",
    "//base/msdp/device_status/libs/include/algorithm",
    "//base/msdp/device_status/libs/include/datahub",
    "//base/msdp/device_status/libs/interface",
    "${device_status_interfaces_path}/innerkits/include",
    "//foundation/distributedhardware/device_manager/interfaces/inner_kits/native_cpp/include/",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/",
    "//base/sensors/sensor/interfaces/native/include/",
    "//utils/system/safwk/native/include",
  ]
}

ohos_unittest("device_status_algorithm_test") {
  module_out_path = module_output_path

  sources = [ "src/device_status_algorithm_test.cpp" ]

  configs = [
    "${device_status_utils_path}:devicestatus_utils_config",
    ":devicestatus_private_config",
  ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/services:devicestatus_service",
    "//base/msdp/device_status/libs:devicestatus_algo",
    "//commonlibrary/c_utils/base:utils",
    "//drivers/peripheral/sensor/hal:hdi_sensor",
    "//foundation/multimodalinput/input/util:libmmi-util",
    "//third_party/cJSON:cjson_static",
    "//third_party/googletest:gtest_main",
    "//third_party/jsoncpp",
  ]

  external_deps = [
    "ability_base:base",
    "access_token:libaccesstoken_sdk",
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "input:libmmi-client",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "sensor:sensor_interface_native",
  ]
}

ohos_unittest("device_status_datahub_test") {
  module_out_path = module_output_path

  sources = [ "src/device_status_datahub_test.cpp" ]

  configs = [
    "${device_status_utils_path}:devicestatus_utils_config",
    ":devicestatus_private_config",
  ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/services:devicestatus_service",
    "//base/msdp/device_status/libs:devicestatus_algo",
    "//base/msdp/device_status/libs:devicestatus_mock",
    "//commonlibrary/c_utils/base:utils",
    "//drivers/peripheral/sensor/hal:hdi_sensor",
    "//foundation/multimodalinput/input/util:libmmi-util",
    "//third_party/cJSON:cjson_static",
    "//third_party/googletest:gtest_main",
    "//third_party/jsoncpp",
  ]

  external_deps = [
    "ability_base:base",
    "access_token:libaccesstoken_sdk",
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "input:libmmi-client",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "sensor:sensor_interface_native",
  ]
}

ohos_unittest("device_status_mock_test") {
  module_out_path = module_output_path

  sources = [ "src/device_status_mock_test.cpp" ]

  configs = [
    "${device_status_utils_path}:devicestatus_utils_config",
    ":devicestatus_private_config",
  ]

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/services:devicestatus_service",
    "//base/msdp/device_status/libs:devicestatus_algo",
    "//base/msdp/device_status/libs:devicestatus_mock",
    "//commonlibrary/c_utils/base:utils",
    "//drivers/peripheral/sensor/hal:hdi_sensor",
    "//foundation/multimodalinput/input/util:libmmi-util",
    "//third_party/cJSON:cjson_static",
    "//third_party/googletest:gtest_main",
    "//third_party/jsoncpp",
  ]

  external_deps = [
    "ability_base:base",
    "access_token:libaccesstoken_sdk",
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "input:libmmi-client",
    "ipc:ipc_core",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "sensor:sensor_interface_native",
  ]
}

group("unittest") {
  testonly = true
  deps = []

  deps += [
    ":device_status_algorithm_test",
    ":device_status_datahub_test",
    ":device_status_mock_test",
  ]
}
