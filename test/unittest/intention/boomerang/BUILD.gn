# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../device_status.gni")

module_output_path = "${device_status_part_name}/device_status/unit_out"

ohos_unittest("BoomerangClientTest") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"

  public_configs = [ "${device_status_root_path}/intention/ipc/tunnel:intention_tunnel_public_config" ]

  module_out_path = module_output_path
  include_dirs = [
    "${device_status_interfaces_path}/innerkits/interaction/include",
    "${device_status_utils_path}",
    "${device_status_utils_path}/include",
    "${device_status_root_path}/intention/boomerang/client/include",
    "${device_status_root_path}/test/unittest/intention/boomerang/include",
    "${device_status_root_path}/intention/ipc/tunnel/include",
  ]

  sources = [
    "${device_status_root_path}/intention/boomerang/client/src/boomerang_client.cpp",
    "src/boomerang_client_test.cpp",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  configs = []

  deps = [
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "${device_status_root_path}/intention/ipc/socket:intention_socket_connection",
    "${device_status_root_path}/intention/prototype:intention_prototype",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image_native",
    "input:libmmi-client",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]
}

ohos_unittest("BoomerangServerTest") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./../../ipc_blocklist.txt"
  }

  branch_protector_ret = "pac_ret"
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${device_status_interfaces_path}/innerkits/interaction/include",
    "${device_status_interfaces_path}/innerkits/include",
    "${device_status_utils_path}",
    "${device_status_utils_path}/include",
    "${device_status_root_path}/intention/boomerang/data/include",
    "${device_status_root_path}/intention/boomerang/server/include",
    "${device_status_root_path}/intention/prototype/include",
    "${device_status_root_path}/intention/data/include",
    "${device_status_root_path}/libs/interface",
    "${device_status_root_path}/services/native/include",
    "${device_status_root_path}/services/communication/service/include",
    "${device_status_root_path}/services/communication/base/",
  ]

  sources = [
    "src/boomerang_server_test.cpp",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${device_status_root_path}/services:devicestatus_static_service",
    "${device_status_root_path}/utils/common:devicestatus_util",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
  ]
  external_deps = [
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "cJSON:cjson",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "image_framework:image_native",
    "input:libmmi-client",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]
}

group("unittest") {
  testonly = true
  deps = [
    ":BoomerangClientTest",
    ":BoomerangServerTest",
  ]
}
